version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: solana-memes-postgres
    environment:
      POSTGRES_DB: solana_memes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - solana-memes-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: solana-memes-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - solana-memes-network
    restart: unless-stopped

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: solana-memes-api
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/solana_memes
      REDIS_URL: redis://redis:6379
      API_PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - solana-memes-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Frontend Client
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: solana-memes-client
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - solana-memes-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: solana-memes-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - client
    networks:
      - solana-memes-network
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: solana-memes-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - solana-memes-network
    restart: unless-stopped

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: solana-memes-grafana
    ports:
      - "3002:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - solana-memes-network
    restart: unless-stopped

  # Background Jobs - Bull Queue
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: solana-memes-worker
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/solana_memes
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - solana-memes-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  solana-memes-network:
    driver: bridge
